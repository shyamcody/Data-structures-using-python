#upto kth level, there will be 2**k - 1. In the (k+1)th level, i th node from left, 
#2^k -1 + i th node (considering from index 1).
import math
N,Q = [int(no) for no in input().split(" ")]
array = [int(no) for no in input().split(" ")]
J = int(math.log(N,2))+1
sum_dict = {}
for i in range(J):
    sum_dict[i+1] = 0
for i in range(J):
    sum_ = 0
    k,l = 2**(i)-1,2**(i+1)-1
    for node_no in range(k,min(l,N)):
        sum_  =sum_ + array[node_no]
    sum_dict[i+1] = sum_
    #print(sum_)
for i in range(Q):
    query = [int(no) for no in input().split(" ")]
    if query[0] == 1:
        x,lv = query[1], query[2]
        node_no = 2**(lv-1) + x -2
        print(array[node_no])
    elif query[0] == 2:
        lv_1,lv_2 = query[1], query[2]
        sum_on = 0
        for level in range(lv_1,lv_2+1):
            sum_on+=sum_dict[level]
        print(sum_on)
    else:
        x,lv = query[1], query[2]
        node_no = 2**(lv-1) + x -2
        temp = array[node_no]
        array[node_no] = query[3]
        sum_dict[lv] = sum_dict[lv] - temp + array[node_no]
